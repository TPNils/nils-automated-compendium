name: Module CI/CD

on: 
  push:
    branches:
      - master

jobs: 
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    # Install dependancies from NPM
    - name: Install dependancies
      shell: bash
      id: install-dependancies
      run: npm i

    # Get the name from 'module.json'
    - name: Build
      shell: bash
      id: build
      run: npm run build

    # Useful only for the template so we can leave the manifest and download urls empty
    - name: Substitute Manifest and Download Links For Versioned Ones
      id: sub_manifest_link_latest
      uses: microsoft/variable-substitution@v1
      with:
        files: './dist/module.json'
      env:
        url: https://github.com/${{github.repository}}
        manifest: https://github.com/${{github.repository}}/releases/latest/download/module.json
        download: https://github.com/${{github.repository}}/releases/latest/download/module.zip

    # create a zip file with all files required by the module to add to the release
    - name: Package
      shell: bash
      id: package
      run: npm run package
         
    # Get the version from 'module.json'
    - name: Get Version
      shell: bash
      id: get-version
      run: echo "::set-output name=version::$(node ./.github/workflows/get-version.js)"

    # Update the 'latest' release
    - name: Update Latest Release
      id: create_latest_release
      uses: ncipollo/release-action@v1
      if: endsWith(github.ref, 'master')
      with:
        allowUpdates: true
        name: Latest
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: './dist/module.json, ./package/module.zip'
        tag: latest

    #Substitute the Manifest and Download URLs in the module.json
    - name: Substitute Manifest and Download Links For Versioned Ones
      id: sub_manifest_link_version
      uses: microsoft/variable-substitution@v1
      with:
        files: './dist/module.json'
      env:
        url: https://github.com/${{github.repository}}
        manifest: https://github.com/${{github.repository}}/releases/download/latest/module.json
        download: https://github.com/${{github.repository}}/releases/download/${{steps.get-version.outputs.version}}/module.zip
    
    # Create a release for this specific version
    - name: Create Version Release
      id: create_version_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        release_name: Release ${{ steps.get-version.outputs.version }}
        draft: false
        prerelease: false
        artifacts: './dist/module.json, ./package/module.zip'
        tag_name: ${{ steps.get-version.outputs.version }}
